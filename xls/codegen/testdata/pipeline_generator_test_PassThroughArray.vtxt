module PassThroughArray(
  input wire clk,
  input wire [23:0] x,
  output wire [23:0] out
);
  wire [7:0] x_unflattened[0:2];
  assign x_unflattened[0] = x[7:0];
  assign x_unflattened[1] = x[15:8];
  assign x_unflattened[2] = x[23:16];

  // ===== Pipe stage 0:

  // Registers for pipe stage 0:
  reg [7:0] p0_x[0:2];
  always @ (posedge clk) begin
    p0_x[0] <= x_unflattened[0];
    p0_x[1] <= x_unflattened[1];
    p0_x[2] <= x_unflattened[2];
  end

  // ===== Pipe stage 1:

  // Registers for pipe stage 1:
  reg [7:0] p1_x[0:2];
  always @ (posedge clk) begin
    p1_x[0] <= p0_x[0];
    p1_x[1] <= p0_x[1];
    p1_x[2] <= p0_x[2];
  end

  // ===== Pipe stage 2:

  // Registers for pipe stage 2:
  reg [7:0] p2_x[0:2];
  always @ (posedge clk) begin
    p2_x[0] <= p1_x[0];
    p2_x[1] <= p1_x[1];
    p2_x[2] <= p1_x[2];
  end

  // ===== Pipe stage 3:

  // Registers for pipe stage 3:
  reg [7:0] p3_x[0:2];
  always @ (posedge clk) begin
    p3_x[0] <= p2_x[0];
    p3_x[1] <= p2_x[1];
    p3_x[2] <= p2_x[2];
  end
  assign out = {p3_x[2], p3_x[1], p3_x[0]};
endmodule
