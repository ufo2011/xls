<html>
  <link rel="stylesheet" href="https://www.gstatic.com/external_hosted/twitter_bootstrap_css/v4/bootstrap.css">
  <style>
    body {
      height: 100vh;
      overflow: auto;
    }
    #outer {
      margin-top: 1em;
    }
    .source-text {
      font-family: monospace;
      width: 100%;
      height: 65vh;
      border: 1px solid #dee2e6;
      white-space: pre-wrap;
      display: inline-block;
      overflow: auto;
      padding: 10px;
      cursor: text;
      margin-top: 10px;
    }
    .node-metadata-text {
      font-family: monospace;
      font-size: large;
      width: 100%;
      height: 65vh;
      border: 1px solid #dee2e6;
      white-space: pre-wrap;
      display: inline-block;
      overflow: auto;
      cursor: text;
    }
    #bottom-pane {
      padding: 5px;
    }
    #bottom-pane button {
      margin-right: 5px;
    }
    #ir pre {
      white-space: pre-wrap;
    }
    #lhs {
      width: 50em;
      max-width: 50em;
      margin-top: 5px;
    }
    #source-status.alert-danger {
      font-family: monospace;
    }
    #node-metadata {
      height: 7.5em;
      max-width: 100em;
    }
    #graph {
      height: 75vh;
      margin-top: 5px;
      margin-bottom: 0px;
    }
  </style>
  <link rel="stylesheet" href="/static/ir_graph.css">
  <title>XLS IR Visualization</title>
  <body>
    <nav class="navbar navbar-light bg-light">
      <span class="navbar-brand mb-0 h1">XLS IR Visualization</span>
    </nav>
    <div id="outer" class="container-fluid">
      <div id="top-panes" class="row">
        <div id="lhs" class="col">
          <ul class='nav nav-tabs' role='tablist'>
            <li class="nav-item">
              <a class="nav-link active" id="ir-source-tab" data-toggle="tab" href="#ir-source" role="tab" aria-controls="ir-source" aria-selected="true">IR</a>

            </li>
            <li class="nav-item">
              <a class="nav-link" id="json-response-tab" data-toggle="tab" href="#json-response" role="tab" aria-controls="json-response" aria-selected="false">JSON</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" id="cytoscape-graph-tab" data-toggle="tab" href="#cytoscape-graph" role="tab" aria-controls="cytoscape-graph" aria-selected="false">Cytoscape graph</a>
            </li>
          </ul>
          <div class="tab-content" id="lhs-tab-content">
            <div id="ir-source" class="tab-pane show active" role="tabpanel" aria-labelledby="ir-source-tab">
              <div class="row">
                <div class="col">
                  <div class="input-group mb-3">
                    <div class="input-group-prepend">
                      <span class="input-group-text">Upload</span>
                    </div>
                    <div class="custom-file">
                      <input type="file" class="custom-file-input" id="ir-upload">
                      <label class="custom-file-label" for="ir-upload">Choose file</label>
                    </div>
                  </div>
                </div>
              </div>
              {%- if use_benchmark_examples -%}
              <div class="form-group row mx-1">
                <select class="col-7 form-control" id="example-select"
                        onClick="selectBenchmark(this.value)">
                  <option>Benchmarks...</option>
                  {% for example in examples %}
                  <option>{{example}}</option>
                  {% endfor %}
                </select>
                <select class="col-2 form-control" id="opt-level-select"
                        onClick="selectBenchmarkOptLevel(this.value)">
                  <option>Opt level...</option>
                  <option>0</option>
                  <option>inline-only</option>
                  <option>1</option>
                  <option>2</option>
                  <option>3</option>
                </select>
                <div class="col-3">
                  <button id="load-example-btn" type="button"
                          class="btn btn-primary disabled"
                          onClick="loadExampleButtonHandler()">
                    Load
                  </button>
                </div>
              </div>
              {%- else -%}
              <select class="row form-control ml-1" id="ir-file-select"
                      onClick="selectIrFile(this.value)">
                <option>IR files...</option>
                {% for example in examples %}
                <option>{{example}}</option>
                {% endfor %}
              </select>
              {%- endif -%}
              <div class="row mx-1">
                <div contenteditable="true" spellcheck="false" id="ir-source-text" class="source-text">{{preloaded_ir}}</div>
              </div>
            </div>
            <div id="json-response" class="tab-pane" role="tabpanel" aria-labelledby="json-response-tab">
              <div contenteditable="false" spellcheck="false" id="json-response-text" class="source-text"></div>
            </div>
            <div id="cytoscape-graph" class="tab-pane" role="tabpanel" aria-labelledby="cytoscape-graph-tab">
              <div contenteditable="true" spellcheck="false" id="cytoscape-graph-text" class="source-text"></div>
            </div>
          </div>
          <div id="source-status" class="alert alert-dark" role="alert"></div>
          <div id="bottom-pane">
            <div class="row">
              <div class="col">
                <button id="view-graph-btn" type="button" class="btn btn-primary" disabled>View Graph</button>
                <button id="view-critical-path-btn" type="button" class="btn btn-primary" disabled>Critical Path</button>
              </div>
              <div class="col">
                <div class="custom-control custom-switch">
                  <input type="checkbox" class="custom-control-input" id="only-selected-checkbox" checked>
                  <label class="custom-control-label" for="only-selected-checkbox">Show only selected nodes</label>
                </div>
              </div>
            </div>
          </div>
        </div><!-- lhs -->
        <div id="rhs" class="col">
          <div id="node-metadata-alert" class="alert alert-secondary" role="alert">
            <div id="node-metadata" class="node-metadata-text"></div>
          </div>
          <div id="graph">
          </div>
        </div><!-- rhs -->
      </div><!-- top-panes -->
    </div>
  </body>
  {% for url in third_party_scripts %}
  <script src="{{ url }}"></script>
  {% endfor %}
  <script src="/static/js_compiled.js"></script>
  <script>
    let selectedOptLevel;
    let selectedExample;
    let visualizer;

    // Enables the given element (e.g., a button).
    function enable(elem) {
      elem.classList.remove('disabled');
      elem.removeAttribute('disabled');
    }

    // Disables the given element (e.g., a button).
    function disable(elem) {
      elem.classList.add('disabled');
      elem.setAttribute('disabled', true);
    }

    function selectBenchmarkOptLevel(level) {
      if (level == "Opt level...") {
        selectedOptLevel = undefined;
        disable(document.getElementById('load-example-btn'));
        return;
      }
      if (selectedExample != undefined) {
        enable(document.getElementById('load-example-btn'));
      }
      selectedOptLevel = level;
    }

    function selectBenchmark(example) {
      if (example == "Examples...") {
        selectedExample = undefined;
        disable(document.getElementById('load-example-btn'));
        return;
      }
      if (selectedOptLevel != undefined) {
        enable(document.getElementById('load-example-btn'));
      }
      selectedExample = example;
    }

    function selectIrFile(example) {
      if (example != "IR files...") {
        loadExample(example, undefined);
      }
    }

    function loadExample(name, opt_level) {
      let url = `/examples/${name}`;
      if (opt_level != undefined) {
        url += `?opt_level=${opt_level}`;
      }
      $.get(url,
            function(data) {
              $('#ir-source-text').text(data);
              inputChangeHandler(
                () => visualizer.draw(showOnlySelectedState()));
            });
    }

    function loadExampleButtonHandler() {
      loadExample(selectedExample, selectedOptLevel);
    }

    function inputChangeHandler(cb) {
      $('#view-graph-btn').prop('disabled', true);
      $('#view-critical-path-btn').prop('disabled', true);
      visualizer.parseAndHighlightIr(cb);
    }

    function showOnlySelectedState() {
      return $('#only-selected-checkbox').prop('checked');
    }

    $(document).ready(function() {
      $('#ir-upload').change(function() {
        if (this.files.length > 0) {
          this.files[0].text().then(function (text) {
            $('#ir-source-text').text(text);
          });
        }
      });

      visualizer = new xls.IrVisualizer($('#graph'),
                              $('#ir-source-text'),
                              $('#node-metadata'),
                              $('#json-response-text'),
                              $('#cytoscape-graph-text'));
      visualizer.setSourceOkHandler(function() {
        $('#source-status').removeClass('alert-danger')
          .removeClass('alert-dark')
          .addClass('alert-success')
          .text('OK');
        $('#view-graph-btn').prop('disabled', false);
        $('#view-critical-path-btn').prop('disabled', false);
      });
      visualizer.setSourceErrorHandler(function(errorText) {
        $('#source-status').removeClass('alert-dark')
          .removeClass('alert-success')
          .addClass('alert-danger')
          .text(errorText);
        $('#view-graph-btn').prop('disabled', true);
        $('#view-critical-path-btn').prop('disabled', true);
      });

      $('#ir-source-text').on('input', (e) => inputChangeHandler());

      $('#view-graph-btn').click(function() {
        visualizer.draw(showOnlySelectedState());
      });
      $('#view-critical-path-btn').click(function() {
        visualizer.selectCriticalPath();
      });

      $('#only-selected-checkbox').change(function() {
        visualizer.setShowOnlySelected(showOnlySelectedState());
      })

      // If --preload_ir_path was passed in to the server, the ir-source-text
      // element will be filled in with IR text. Trigger the inputChangedHandler
      // to parse it, select the critical path and show the graph.
      if (document.getElementById('ir-source-text').textContent.trim() != '') {
        inputChangeHandler( () => {
          visualizer.selectCriticalPath();
          visualizer.draw(showOnlySelectedState());
        })
      }

      // Pressing 'j' or 'k' will move up and down through the list of IR files
      // in the example directory (only enabled if --example_ir_dir given to
      // app.py). The common use case for --example_ir_dir is exposing the IR
      // after each pass in the optimization pipeline (created with opt_main
      // --ir_dump_path) so the j/k short cuts enable quick movement forward and
      // backwards through the optimization pipeline.
      document.addEventListener("keydown", event => {
        let file_selector = document.getElementById('ir-file-select');
        if (file_selector == undefined ||
            event.target == document.getElementById('ir-source-text') ||
            event.key != 'j' && event.key != 'k') {
          return;
        }
        let idx = file_selector.selectedIndex;
        if (event.key == 'j') {
          idx++;
        } else {
          idx--;
        }
        idx = idx < 1 ? 1 : idx;
        idx = idx >= file_selector.length ? file_selector.length - 1 : idx;
        file_selector.selectedIndex = idx;
        // TODO(meheff): Selected nodes should be preserved across transitions.
        selectIrFile(file_selector.value);
      });
    });
  </script>
</html>
