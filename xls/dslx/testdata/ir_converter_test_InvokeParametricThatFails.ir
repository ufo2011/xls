package test_module

fn __itok__test_module__does_fail__32(__token: token, __activated: bits[1]) -> (token, bits[32]) {
  not.5: bits[1] = not(__activated, id=5)
  assert.6: token = assert(__token, not.5, message="Assertion failure via fail! @ test_module.x:3:8-3:20", id=6)
  literal.4: bits[32] = literal(value=42, id=4)
  after_all.8: token = after_all(assert.6, id=8)
  identity.7: bits[32] = identity(literal.4, id=7)
  N: bits[32] = literal(value=32, id=3)
  ret tuple.9: (token, bits[32]) = tuple(after_all.8, identity.7, id=9)
}

fn __itok__test_module__main(__token: token, __activated: bits[1], x: bits[32]) -> (token, bits[32]) {
  invoke.13: (token, bits[32]) = invoke(__token, __activated, to_apply=__itok__test_module__does_fail__32, id=13)
  tuple_index.14: token = tuple_index(invoke.13, index=0, id=14)
  after_all.16: token = after_all(tuple_index.14, id=16)
  tuple_index.15: bits[32] = tuple_index(invoke.13, index=1, id=15)
  ret tuple.17: (token, bits[32]) = tuple(after_all.16, tuple_index.15, id=17)
}
